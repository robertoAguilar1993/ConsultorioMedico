/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import Controller.HorarioTrabajoController;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Locale;
import javax.swing.table.DefaultTableModel;
import util.ConsultorioMedicoConst;
import util.Result;
import static vista.VtnAgragarCitas.citasController;
import static vista.VtnAgragarCitas.getCitaByHora;
import vo.CitaVO;
import vo.HorarioTrabajoVO;

/**
 *
 * @author Alex
 */
public class VtnVerCitas extends javax.swing.JFrame {

    /**
     * Creates new form VtnCitas
     */
    public static HorarioTrabajoController horasTrabajoController = new HorarioTrabajoController();


    public VtnVerCitas() {
        initComponents();
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jcalFechaVer = new com.toedter.calendar.JCalendar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblHistorialCitasVer = new javax.swing.JTable();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtblHistorialCitasVer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"9:00 AM", "Disponible", null},
                {"10: 00 AM", "Disponible", null},
                {"11:00 AM", "Disponible", null},
                {"12:00 PM", "Disponible", null},
                {"1:00 PM", "Disponible", null},
                {"2:00 PM", "Disponible", null},
                {"3:00 PM", "Disponible", null},
                {"4:00 PM", "Disponible", null},
                {"5:00 PM", "Disponible", null},
                {"6:00 PM", "Disponible", null}
            },
            new String [] {
                "Hora", "Estado", "Nombre del paciente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtblHistorialCitasVer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 19, Short.MAX_VALUE)
                .addComponent(jcalFechaVer, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jcalFechaVer, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        jcalFechaVer.addPropertyChangeListener(new PropertyChangeListener(){
            public void propertyChange(PropertyChangeEvent e) {
                VtnVerCitas.setHistorialCitas();
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void setHistorialCitas(){
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        String  fecha = formatter.format(jcalFechaVer.getDate());
        getCitasByDay(fecha);
    }
    
    /**
     * Metodo encarga en buscar las citas por fechas
     * @param fecha 
     */
    public static void getCitasByDay(String fecha){
       Result<List<CitaVO>> result= citasController.getCitasByDate(fecha);
       if(result.isOperationStatus()){
            llenarCitas(result.getResult());
       }
    }
    
    /**
     * Metodo encargado de llenar la tabla de citas
     * @param citasList 
     */
    public static void llenarCitas(List<CitaVO> citasList){
        SimpleDateFormat formatoLargoEsMX = new SimpleDateFormat(
            "EEEE", new Locale("ES", "MX")
         );
        
        String dia = formatoLargoEsMX.format( jcalFechaVer.getCalendar().getTime() );
        
        
        String[] titulo = {
            "Hora", "Estado","Nombre del paciente"
        };
        
        DefaultTableModel modelo = new DefaultTableModel(null, titulo);
        Object[] fila = new Object[5];
        Result<HorarioTrabajoVO> result = horasTrabajoController.getHorarioTrabajo(dia);
        HorarioTrabajoVO horarioTrabajoVO = result.getResult();
        List<String> horas = null ;
        
        if(horarioTrabajoVO.getDiaLobaral() == 1)  {
            horas = citasController.getHoras(horarioTrabajoVO);
        }

        
        if ( citasList != null && !citasList.isEmpty() && horarioTrabajoVO.getDiaLobaral() == 1 ) {
            for ( String hora : horas ) {
                CitaVO citaVO = getCitaByHora(hora, citasList);
                if ( citaVO != null ) {
                    fila[0] = citaVO.getHora();
                    fila[1] = ConsultorioMedicoConst.STATUS_OCUPADO;
                    fila[2] = citaVO.getPacienteVO().toString();
                }else{
                    fila[0] = hora;
                    fila[1] = ConsultorioMedicoConst.STATUS_DISPONIBLE;
                    fila[2] = ConsultorioMedicoConst.STRING_EMPTY;
                }
                modelo.addRow(fila);
            }
        } else if ( horarioTrabajoVO.getDiaLobaral() == 0 ) {
            String[] tituloNone = {
                "DÃ­a no disponible"
            };
            
            DefaultTableModel modeloNone = new DefaultTableModel(null, tituloNone);
            modelo = modeloNone;
        }else {
            for (String hora : horas) {
                fila[0] = hora;
                fila[1] = ConsultorioMedicoConst.STATUS_DISPONIBLE;
                fila[2] = ConsultorioMedicoConst.STRING_EMPTY;
                modelo.addRow(fila);

            }
        }
        jtblHistorialCitasVer.setModel(modelo);
    }
    
    
    
    
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VtnVerCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VtnVerCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VtnVerCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VtnVerCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VtnVerCitas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JScrollPane jScrollPane1;
    public static com.toedter.calendar.JCalendar jcalFechaVer;
    public static javax.swing.JTable jtblHistorialCitasVer;
    // End of variables declaration//GEN-END:variables
}
